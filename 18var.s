.data

print_format:
.string "%d "

print_summ:
.string "%d\n"

mass:
        .long 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
mass_end:

.text
.global main
.type main, @function

main:
	movl $mass, %ebx /* в регистр %ebx перемещаем адрес переменной mass */
	movl $0, %ecx /* в регистре %ecx храним значение суммы, пока поместим туда число 0 */

edit:
	movl (%ebx), %eax /* в %eax помещаем первый элемент массива (который лежит в регистре %ebx) */
	shl $1, %eax  /* логически сдвигаем влево значение, которое находится в регистре %eax */
	movl %eax, (%ebx) /* в %ebx помещаем обнолвенное значение %eax, соответственно мы заменили значение четного элемента в массиве */
	addl %eax, %ecx  /* перемещаем в сумму значение элемента массива */
	cmpl $mass_end, %ebx  /* сравниваем адрес текущего элемента массива и адрес конца массива */
	je new_mass /* если адрес текущего элемента массива == адрес конца массива */
	addl $4, %ebx /* переходим к адресу следующего элемента массива */


	movl (%ebx), %eax /* в %ebx помещаем первый элемент массива (который лежит в регистре %ebx) */
	sar $1, %eax /* арифметически сдвигаем вправо значение, которое находится в регистре %eax */
        movl %eax, (%ebx)/* в %ebx перемещаем обновленное значение %eax, соответственно мы заменили значение нечетного элемента в массиве */
	addl %eax, %ecx /* перемещаем в сумму значение элемента массива */
	cmpl $mass_end, %ebx /* сравниваем  адрес текущего элемента массива и адрес конца массива*/
	je new_mass /* если адрес текущего элемента массива == адрес конца массива */
	addl $4, %ebx /* переходим к адресу следующего элемента массива */


	jmp edit /* безусловный переход к функции edit */


new_mass:
	movl $mass, %ebx /* в регистр %ebx перемещаем адрес переменной mass */

print_sum:
	push %ecx /* кладем в стек значение регистра %eсx */
	push $print_summ /* кладем в стек функцию print_format */
	call printf /* передаем управление системной функции printf */
	addl $8, %esp /* очищаем регистр, который отвечает за стек */

	/*ret /* возвращаем управление себе, и конец программы */


/* если надо вывести измененный массив, то нужно закомментировать функцию print_sum, и раскоментировать эту */

print_mass:
	push (%ebx)  /* кладем в стек значение регистра %ebx */
	push $print_format /* кладем в стек функцию  print_format */
	call printf  /* передаем управление системной функции printf */
	addl $8, %esp /* очищаем регистр, который отвечает за стек */

	addl $4, %ebx /* переходим к адресу следующего элемента массива */
	cmpl $mass_end, %ebx /* сравнить адрес текущего элемента массива и адрес конца массива*/
	jne print_mass /* если адрес текущего элемента массива != адрес конца массива, то переходим в функцию print_arr*/
	ret /* возвращаем управление себе, и конец программы */


